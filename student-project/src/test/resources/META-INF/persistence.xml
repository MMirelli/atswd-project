<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
	xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	
	<!-- Unit-testing PU -->
	<persistence-unit name="studentSystem-inMemory-PU"
		transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
		<!-- Adding entities -->
		<class>it.fi.mirelli.studentproject.models.Student</class>

		<properties>
		
			<!-- Configuring JDBC properties, since it is unit-testing PU we use H2 drivers,
							in the way that we use in-memory DB -->
			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
			
			<!-- Hard-coding hostname where JPA searches for DB, through JDBC driver. In this
										case it is just in-memory -->
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:StudentDB" />

			<!-- Hibernate H2 hibernate dialect -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
			
			<!-- Configuring generation and drop actions -->
			<property name="javax.persistence.schema-generation.database.action"
				value="drop-and-create" />
			

			<!-- Configuring path to generating and dropping table scripts which are located
							 in folder main/resources/META-INF/ -->
			
			<!-- Avoiding formatting the generated SQL statement to make it more readable, 
								but taking up more screen space. -->
			<property name="hibernate.format_sql" value="false" />

			<!-- Enabling the logging of all the generated SQL statements to the console -->
			<property name="hibernate.show_sql" value="true" />
			
			<!-- Disabling metadata loading, makes DB faster -->
			<property name="hibernate.temp.use_jdbc_metadata_defaults" value="false" />

		</properties>

	<!-- Integration-testing PU -->
	</persistence-unit>
	<persistence-unit name="studentSystem-remote-PU"
		transaction-type="RESOURCE_LOCAL">
	<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
	
		<!-- Adding entities -->
		<class>it.fi.mirelli.studentproject.models.Student</class>

		<properties>
		
			<!-- Configuring JDBC properties, since it is integration-testing PU we use MySQL drivers,
								so that we use "remote" in-docker DB -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />
			
			<!-- Hard-coding hostname:port where JPA searches for DB, through JDBC driver -->
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:12345/StudentDB?useSSL=false" />
			
			<!-- Setting the hibernate MySQL5 dialect, since we use MySQL5.7 DB -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />

			<!-- Setting Username and Password JPA must provide the DB server with -->
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="psw" />

			<!-- Configuring generation and drop actions -->
			<property name="javax.persistence.schema-generation.database.action"
				value="drop-and-create" />
						
			<!-- Avoiding formatting the generated SQL statement to make it more readable, 
								but taking up more screen space. -->
			<property name="hibernate.format_sql" value="false" />
			
			<!-- Enabling the logging of all the generated SQL statements to the console -->
			<property name="show_sql" value="true" />
			
			<!-- Disabling metadata loading, makes DB faster -->
			<property name="hibernate.temp.use_jdbc_metadata_defaults" value="false" />

		</properties>
	</persistence-unit>
</persistence>